---
# Set up a VPS on DigitalOcean and configure the Netmaker application.
# This sets up a single node Netmaker server.and applies the default
# settings. It also configures the DNS records on Cloudflare.
# Additional work would be needed to account for load balancing if
# a multiple node setup is desired.


# The first group of tasks either creates or destroys the DigitalOcean
# Droplet and Cloudflare DNS record. The second group of tasks only
# runs if the DigitalOcean Droplet is created.
- name: Create Netmaker Droplet
  hosts: localhost
  gather_facts: false
  vars_files:
    - vars/vault.yaml
    - vars/main.yaml
    - vars/netmaker.yaml

  tasks:
    - name: Configure DigitalOcean Droplet
      include_role:
        name: digitalocean

    - name: Get the Netmaker Droplet public IP address
      set_fact:
        do_ip_address: "{{ item.ip_address }}"
      loop: "{{ dp_result['results'][0]['data']['droplet']['networks']['v4'] }}"
      when: netmaker_droplet[0].state == "present" and item.type == "public"
      no_log: true

    - name: Configure Cloudflare DNS Record
      include_role:
        name: cloudflare
      vars:
        ip_address: "{{ do_ip_address | default('') }}"


# The plays below will only run when the hosts group do_netmaker
# is defined and there is at least one host in the group
- name: Initial Setup of Netmaker Droplet
  hosts: do_netmaker
  gather_facts: false
  vars_files:
    - vars/vault.yaml
    - vars/main.yaml
    - vars/netmaker.yaml

  tasks:
    # Get the changed status from the droplet creation play
    # The create_user_flag will either be 'true' or 'false'.
    # This is used to determine if the user needs to be created the first time.
    # If the status is not changed, the create_user play will not run.
    #
    # The hostvars['localhost']['dp_result']['results'] list contains
    # a dictionary for each droplet created. The dictionary has the keys
    # 'ansible_loop_var', 'changed', 'data', 'failed', 'invocation', and 'item'.
    - name: Get the changed status from the dp_result variable
      ansible.builtin.set_fact:
        create_user_flag: "{{ item['changed'] }}"
      loop: "{{ hostvars['localhost']['dp_result']['results'] }}"
      when: item['item']['name'] == inventory_hostname
      no_log: true

    - name: Import create_user role from digitalocean
      include_role:
        name: digitalocean
        tasks_from: create_user
      vars:
        - ansible_ssh_host_key_checking: false
      when: create_user_flag

- name: Additional Setup of Netmaker Droplet
  hosts: do_netmaker
  gather_facts: true
  vars_files:
    - vars/vault.yaml
    - vars/main.yaml
    - vars/netmaker.yaml
  roles:
    - name: geerlingguy.security
      become: true

  tasks:
    - name: Import main role from base
      include_role:
        name: base
      vars:
        - additional_packages:
            - docker.io
            - docker-compose

    - name: Import setup dotfiles role from base
      include_role:
        name: base
        tasks_from: setup_dotfiles
      vars:
        dotbot_skip_ssh_authorized_file: true
