---

# Run the pihole playbook to make sure the DNS records are correct
- name: Run the pihole role
  ansible.builtin.import_playbook: "../../playbooks/pihole.yaml"
  tags:
    - pihole
    - proxmox
    - proxmox.vm
    - proxmox.vm.create
    - base.known_hosts

# Run the proxmox role
- name: Run the proxmox role
  hosts: proxmox_nodes
  vars_files:
    - ../../vars/vault.yaml
    - ../../vars/main.yaml
    - vars/proxmox.yaml

  tasks:
    # This creates the VMs
    - name: Run the proxmox role to create VMs
      ansible.builtin.include_role:
        name: proxmox
        tasks_from: create_vm
      vars:
        proxmox_template_id: 9000
        proxmox_vm: "{{ hostvars[item].proxmox_vm }}"
      loop: "{{ groups['proxmox_vms'] }}"
      tags:
        - proxmox
        - proxmox.vm
        - proxmox.vm.create

    # Start the VMs and wait for them to be ready
    - name: Run the proxmox role to start VMs
      ansible.builtin.include_role:
        name: proxmox
        tasks_from: start_vm
      vars:
        proxmox_vm: "{{ hostvars[item].proxmox_vm }}"
        proxmox_ip: "{{ hostvars[item].network.ip }}"
      loop: "{{ groups['proxmox_vms'] }}"
      tags:
        - proxmox
        - proxmox.vm
        - proxmox.vm.create

    # Update the known_hosts file for IP
    - name: Update the known_hosts file for IP
      ansible.builtin.include_role:
        name: base
        tasks_from: update_known_hosts
      vars:
        base_hostname: "{{ hostvars[item].network.ip }}"
        base_state: present
        base_comment: "Proxmox VM: {{ item }}"
      loop: "{{ groups['proxmox_vms'] }}"
      tags:
        - proxmox
        - proxmox.vm
        - proxmox.vm.create
        - base.known_hosts

    # Update the known_hosts file for hostname
    - name: Update the known_hosts file for hostname
      ansible.builtin.include_role:
        name: base
        tasks_from: update_known_hosts
      vars:
        base_hostname: "{{ item }}"
        base_state: present
        base_comment: "Proxmox VM: {{ item }}"
      loop: "{{ groups['proxmox_vms'] }}"
      tags:
        - proxmox
        - proxmox.vm
        - proxmox.vm.create
        - base.known_hosts

# Run the first time setup to configure the VMs
- name: Run the first time setup to configure VMs
  hosts: proxmox_vms
  vars_files:
    - ../../vars/vault.yaml
    - ../../vars/main.yaml
    - vars/proxmox.yaml
  tags:
    - proxmox
    - proxmox.vm
    - proxmox.vm.create

  tasks:
    # Run the base role
    - name: Import base role
      ansible.builtin.import_role:
        name: base
      vars:
        base_additional_packages:
          - "qemu-guest-agent"
        base_additional_services:
          - "qemu-guest-agent.service"
        base_install_docker: true
        base_dotfiles:
          install: true
          dotbot_skip_ssh_authorized_file: false
      tags:
        - base
        - base.apt
        - base.docker
        - base.dotfiles
        - base.known_hosts

    # Run the geerlingguy.security role
    - name: Import geerlingguy.security role
      ansible.builtin.import_role:
        name: geerlingguy.security
      become: true
      tags:
        - base
        - base.geerlingguy.security
