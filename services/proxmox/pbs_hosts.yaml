---
# This playbook is ued to configure the Proxmox Backup Server (PBS) hosts.

# Run the pihole playbook to make sure the DNS records are correct
- name: Run the pihole role
  ansible.builtin.import_playbook: "../../playbooks/pihole.yaml"
  tags:
    - pihole
    - proxmox
    - proxmox.pve
    - base.known_hosts

# Get the ntfy tokens to use later in the playbook for notifications.
- name: Get the ntfy tokens
  hosts: docker-cloud-01
  gather_facts: false
  vars_files:
    - ../../vault/vault.yaml
  tasks:
    - name: Get the ntfy tokens
      ansible.builtin.include_role:
        name: ntfy
        tasks_from: tokens.yaml

    # Make the ntfy_tokens_extracted variable available to the proxmox_pbs hosts
    - name: Make the ntfy_tokens_extracted variable available to the proxmox_pbs hosts
      ansible.builtin.add_host:
        name: "{{ item }}"
        ntfy_tokens_extracted: "{{ ntfy_tokens_extracted }}"
      loop: "{{ groups['proxmox_pbs'] }}"
      delegate_to: localhost

# These first tasks are run as the root user since it includes
# setting up the new user with the ssh keys.
- name: Make sure the PBS host is setup
  hosts: proxmox_pbs
  vars_files:
    - ../../vault/vault.yaml
  vars:
    ansible_host_key_checking: false
    ansible_ssh_common_args: '-o UserKnownHostsFile=/dev/null'
    ansible_user: root
    ansible_ssh_pass: "{{ secret_user_password }}"
  tags:
    - proxmox
    - proxmox.pbs
    - base.known_hosts

  tasks:
    # Update the known_hosts var_file
    - name: Update the known_hosts var_file
      ansible.builtin.include_role:
        name: base
        tasks_from: update_known_hosts
      vars:
        base_hostname: "{{ item }}"
        base_state: present
        base_comment: "PBS Host: {{ ansible_hostname }}"
      loop:
        - "{{ ansible_default_ipv4.address }}"
        - "{{ ansible_hostname }}"
        - "{{ inventory_hostname }}"
      loop_control:
        label: "{{ item }}"
      tags:
        - base.known_hosts

    # Configure the Proxmox repos
    - name: Configure the Proxmox repos
      ansible.builtin.include_role:
        name: proxmox
        tasks_from: pve_repos

    # Run the base role
    # Add the ssh keys so we can login as the new user later
    - name: Run the base role
      ansible.builtin.include_role:
        name: base
      vars:
        base_additional_packages: "{{ hostvars[inventory_hostname].host_additional_packages }}"
        base_additional_services: "{{ hostvars[inventory_hostname].host_additional_services }}"
        base_user_add_ssh_keys: true
        base_user_default: "{{ default_user }}"
        base_user_password_prehashed: "{{ secret_user_password_prehashed }}"
      tags:
        - base.apt
        - base.user
        - base.timezone

    # Update the PBS users
    - name: Update the PBS users
      ansible.builtin.include_role:
        name: proxmox
        tasks_from: pbs_create_users
      tags:
        - proxmox.pbs.users

    # Update the PBS ACME certificates
    - name: Update the PBS ACME certificates
      ansible.builtin.include_role:
        name: proxmox
        tasks_from: pbs_acme
      tags:
        - proxmox.pbs.acme

# These tasks can be run as the new user
- name: Continue setting up the Proxmox host as the new user
  hosts: proxmox_pbs
  vars_files:
    - ../../vault/vault.yaml
  tags:
    - proxmox
    - proxmox.pve
  tasks:
    # This is required to explicitly get the ansible facts for the
    # base.geerlingguy.security role if running only that role via tags.
    - name: Do ansible setup
      ansible.builtin.setup:
      tags:
        - never
        - base.geerlingguy.security

    # Run the fileserver role
    - name: Import fileserver role
      ansible.builtin.import_role:
        name: fileserver
      when:
        hostvars[inventory_hostname].fileserver_setup is defined and
        hostvars[inventory_hostname].fileserver_setup is true
      tags:
        - fileserver
        - fileserver.zfs

    # Run the sanoid role
    - name: Import sanoid role
      ansible.builtin.import_role:
        name: sanoid
      when:
        hostvars[inventory_hostname].sanoid_setup is defined and
        hostvars[inventory_hostname].sanoid_setup is true
      tags:
        - sanoid

    # Setup PBS datastores
    - name: Setup PBS datastores
      ansible.builtin.include_role:
        name: proxmox
        tasks_from: pbs_datastores
      tags:
        - proxmox
        - proxmox.pbs

    # Setup PBS verify schedules
    - name: Setup PBS verify schedules
      ansible.builtin.include_role:
        name: proxmox
        tasks_from: pbs_verify_schedules
      tags:
        - proxmox
        - proxmox.pbs

    # Setup PBS notifications
    - name: Setup PBS notifications
      ansible.builtin.include_role:
        name: proxmox
        tasks_from: pbs_notifications
      tags:
        - proxmox
        - proxmox.pbs

    # Run the base role
    - name: Run the base role
      ansible.builtin.include_role:
        name: base
      vars:
        base_user_run_setup: false
        base_dotfiles:
          install: true
          dotbot_skip_ssh_authorized_file: false
      tags:
        - base.apt
        - base.docker
        - base.timezone
        - base.dotfiles

    # Run the geerlingguy.security role
    - name: Import geerlingguy.security role
      ansible.builtin.import_role:
        name: geerlingguy.security
      become: true
      tags:
        - base.geerlingguy.security

    # Run the NUT role
    - name: Run the NUT role
      ansible.builtin.include_role:
        name: nut
      when: proxmox_nut_configure
      tags:
        - nut
