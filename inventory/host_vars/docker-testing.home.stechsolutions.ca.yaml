---
# Host variables for docker-testing.home.stechsolutions.ca host

# other variables are set in group_vars/proxmox_nodes.yaml and
# proxmox_vms/hosts.yaml

fileserver_setup: true
fileserver_setup_nfs_client: true
fileserver_setup_attached_disks: true

fileserver_attached_disks:
  # 50 GB test disk for tdarr scratch space
  - name: scsi-0QEMU_QEMU_HARDDISK_drive-scsi1
    partition_label: 50-GB-VD-0
    mount_point: "/mnt/scratch/tdarr"
    owner: "{{ default_user }}"
    group: "{{ default_user }}"
    filesystem_type: ext4
    options: defaults,errors=remount-ro
    state: mounted
  # 10 GB test disk for docker compose proxy volume
  - name: scsi-0QEMU_QEMU_HARDDISK_drive-scsi2
    partition_label: 10-GB-VD-0
    mount_point: "/home/{{ default_user }}/docker_mounts/proxy"
    owner: "{{ default_user }}"
    group: "{{ default_user }}"
    filesystem_type: ext4
    options: defaults,errors=remount-ro
    state: mounted
  # 10 GB test disk for docker compose tdarr volume
  - name: scsi-0QEMU_QEMU_HARDDISK_drive-scsi3
    partition_label: 10-GB-VD-0
    mount_point: "/home/{{ default_user }}/docker_mounts/tdarr"
    owner: "{{ default_user }}"
    group: "{{ default_user }}"
    filesystem_type: ext4
    options: defaults,errors=remount-ro
    state: mounted

fileserver_nfs_mounts:
  - path: /mnt/nfs/movies
    server: storage.home.stechsolutions.ca
    nfs_export: /mnt/storage/movies
    options: defaults
    state: mounted
  - path: /mnt/nfs/tv
    server: storage.home.stechsolutions.ca
    nfs_export: /mnt/storage/tv
    options: defaults
    state: mounted

# docker container configuration files
docker_configuration_files:
  - name: traefik.yaml
    src: "{{ inventory_dir }}/../files/traefik/traefik-dev.yaml"
    dest: /home/{{ default_user }}/docker_mounts/proxy/traefik/traefik.yaml
    mode: '0664'
    container_name: traefik

# docker compose
docker_compose:
  - compose_name: proxy
    state: present
    networks:
      - name: traefik
      - name: default
    containers:
      - container_name: traefik
        image: traefik:v3.1
        networks:
          - traefik
          - default
        environment:
          - TZ=America/Edmonton
          - "CF_API_EMAIL={{ default_user_email }}"
          - "CF_DNS_API_TOKEN={{ secret_cf_token }}"
        ports:
          - 80:80
          - 443:443
          - 8080:8080
        volumes:
          - "/home/{{ default_user }}/docker_mounts/proxy/traefik:/etc/traefik"
        restart: always
      - container_name: docker-socket-proxy
        image: tecnativa/docker-socket-proxy:0.2.0
        networks:
          - traefik
        environment:
          - CONTAINERS=1 # Allow access to viewing containers
          - POST=0 # Disallow any POST operations (effectively read-only) 
        ports:
          - 2375:2375
        volumes:
          - "/var/run/docker.sock:/var/run/docker.sock"
        restart: unless-stopped
      - container_name: homepage
        image: ghcr.io/gethomepage/homepage:v0.9.5
        networks:
          - traefik
          - default
        environment:
          - TZ=America/Edmonton
          - PUID=1000
          - PGID=1000
        ports:
          - 3000:3000
        volumes:
          - "/home/{{ default_user }}/docker_mounts/proxy/homepage:/app/config"
        labels:
          - "traefik.enable=true"
          - "traefik.http.routers.homepage.rule=Host(`homepage.home.stechsolutions.ca`)"
          - "traefik.http.routers.homepage.entrypoints=websecure"
          - "traefik.http.routers.homepage.tls.certresolver=letsencrypt"
  - compose_name: tdarr
    state: present
    containers:
      - container_name: tdarr
        image: ghcr.io/haveagitgat/tdarr:2.23.01
        network_mode: bridge
        ports:
          - "8265:8265"
          - "8266:8266"
        environment:
          - TZ=America/Edmonton
          - PUID=1000
          - PGID=1000
          - UMASK_SET=022
          - serverIP=0.0.0.0
          - serverPort=8266
          - webUIPort=8265
          - internalNode=true
          - inContainer=true
          - ffmpegVersion=6
          - nodeName=MyInternalNode
        volumes:
          - "/mnt/scratch/tdarr:/temp"
          - "/home/{{ default_user }}/docker_mounts/tdarr/server:/app/server"
          - "/home/{{ default_user }}/docker_mounts/tdarr/configs:/app/configs"
          - "/home/{{ default_user }}/docker_mounts/tdarr/logs:/app/logs"
