---
name: monitoring

services:
  prometheus:
    image: prom/prometheus:v3.0.1
    user: 1000:1000
    networks:
      - traefik
      - prometheus_exporter
    container_name: prometheus
    command: ['--config.file=/etc/prometheus/prometheus.yml', '--web.external-url=http://prometheus-testing.home.stechsolutions.ca']
    volumes:
        - /home/{{ default_user }}/docker_mounts/monitoring/prometheus:/etc/prometheus
        - /home/{{ default_user }}/docker_mounts/monitoring/prometheus/data:/prometheus
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus-testing.home.stechsolutions.ca`)"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls.certresolver=letsencrypt"
  alertmanager:
    image: prom/alertmanager:v0.28.0
    networks:
      - traefik
      - prometheus_exporter
    container_name: alertmanager
    command: 
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/etc/alertmanager'
      - '--web.external-url=http://alertmanager-testing.home.stechsolutions.ca'
    volumes:
        - /home/{{ default_user }}/docker_mounts/monitoring/alertmanager:/etc/alertmanager
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.alertmanager.rule=Host(`alertmanager-testing.home.stechsolutions.ca`)"
      - "traefik.http.services.alertmanager.loadbalancer.server.port=9093"
      - "traefik.http.routers.alertmanager.entrypoints=websecure"
      - "traefik.http.routers.alertmanager.tls.certresolver=letsencrypt"
  ntfy-alertmanager:
    image: xenrox/ntfy-alertmanager:0.4.0
    networks:
      - traefik
      - prometheus_exporter
    container_name: ntfy-alertmanager
    volumes:
      - /home/{{ default_user }}/docker_mounts/monitoring/ntfy-alertmanager:/etc/ntfy-alertmanager
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.ntfy-alertmanager.rule=Host(`ntfy-alertmanager-testing.home.stechsolutions.ca`)"
      - "traefik.http.services.ntfy-alertmanager.loadbalancer.server.port=8080"
      - "traefik.http.routers.ntfy-alertmanager.entrypoints=websecure"
      - "traefik.http.routers.ntfy-alertmanager.tls.certresolver=letsencrypt"
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.2
    networks:
      - traefik
    container_name: cadvisor
    command: ['--logtostderr', '--docker_only=true']
    volumes:
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - {{ docker_data_dir }}:{{ docker_data_dir }}:ro
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cadvisor.rule=Host(`docker-testing.home.stechsolutions.ca`) && PathPrefix(`/dockermetrics`)"
      - "traefik.http.middlewares.cadvisor-replace-path.replacepath.path=/metrics"
      - "traefik.http.services.cadvisor.loadbalancer.server.port=8080"
      - "traefik.http.routers.cadvisor.entrypoints=websecure"
      - "traefik.http.routers.cadvisor.tls.certresolver=letsencrypt"
      # Whitelist IPs for Tailscale, Docker, and local network
      - "traefik.http.middlewares.cadvisor-ipwhitelist.ipwhitelist.sourcerange=100.64.0.0/10,10.0.0.0/8,172.18.0.0/16"
      - "traefik.http.routers.cadvisor.middlewares=cadvisor-ipwhitelist,cadvisor-replace-path"
  prometheus-pve-exporter:
    image: prompve/prometheus-pve-exporter:3.5.0
    networks:
      - prometheus_exporter
    container_name: prometheus-pve-exporter
    environment:
      - PVE_USER=prometheus@pve
      - PVE_PASSWORD={{ secret_pve_prometheus_user_password }}
      # remove this when proxmox is proxied via traefik
      - PVE_VERIFY_SSL=false
    restart: unless-stopped
  prometheus-pihole-exporter:
    image: ekofr/pihole-exporter:latest
    networks:
      - prometheus_exporter
    container_name: prometheus-pihole-exporter
    environment:
      - PIHOLE-PROTOCOL=http
      - PIHOLE_HOSTNAME=pihole-1.home.stechsolutions.ca,pihole-2.home.stechsolutions.ca
      - PIHOLE_PASSWORD={{ secret_pihole_password_hash }}
      - PORT=9617
    restart: unless-stopped

networks:
  traefik:
    name: traefik
    external: true
  prometheus_exporter:
    name: prometheus_exporter
