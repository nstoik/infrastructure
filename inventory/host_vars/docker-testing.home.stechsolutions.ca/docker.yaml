---
# docker variables for docker-testing.home.stechsolutions.ca host

# docker container configuration files
docker_configuration_files:
  - name: traefik.yaml
    src: "{{ inventory_dir }}/../files/traefik/traefik-dev.yaml"
    dest: /home/{{ default_user }}/docker_mounts/proxy/traefik/traefik.yaml
    mode: '0664'
    container_name: traefik
  - name: unifi.yaml
    src: "{{ inventory_dir }}/../files/traefik/dynamic/unifi.yaml"
    dest: /home/{{ default_user }}/docker_mounts/proxy/traefik/dynamic/unifi.yaml
    mode: '0664'
    container_name: traefik
  - name: homepage_settings.yaml
    src: "{{ inventory_dir }}/../files/homepage/settings.yaml"
    dest: /home/{{ default_user }}/docker_mounts/proxy/homepage/settings.yaml
    mode: '0664'
    container_name: homepage
  - name: homepage_bookmarks.yaml
    src: "{{ inventory_dir }}/../files/homepage/bookmarks.yaml"
    dest: /home/{{ default_user }}/docker_mounts/proxy/homepage/bookmarks.yaml
    mode: '0664'
    container_name: homepage
  - name: homepage_docker.yaml
    src: "{{ inventory_dir }}/../files/homepage/docker.yaml"
    dest: /home/{{ default_user }}/docker_mounts/proxy/homepage/docker.yaml
    mode: '0664'
    container_name: homepage
  - name: prometheus_config.yaml
    src: "{{ inventory_dir }}/../files/prometheus/prometheus.yaml"
    dest: /home/{{ default_user }}/docker_mounts/monitoring/prometheus/prometheus.yml
    mode: '0664'
    container_name: prometheus
  - name: prometheus_rules.yaml
    src: "{{ inventory_dir }}/../files/prometheus/rules/alerts.yaml"
    dest: /home/{{ default_user }}/docker_mounts/monitoring/prometheus/rules/alerts.yaml
    mode: '0664'
    container_name: prometheus
  - name: prometheus_rules_test.yaml
    src: "{{ inventory_dir }}/../files/prometheus/rules/test.yaml"
    dest: /home/{{ default_user }}/docker_mounts/monitoring/prometheus/rules/test.yaml
    mode: '0664'
    container_name: prometheus

# docker container template files
docker_template_files:
  - name: homepage_widgets.yaml
    src: "{{ inventory_dir }}/../files/homepage/widgets.yaml.j2"
    dest: /home/{{ default_user }}/docker_mounts/proxy/homepage/widgets.yaml
    mode: '0664'
    container_name: homepage
  - name: homepage_services.yaml
    src: "{{ inventory_dir }}/../files/homepage/services.yaml.j2"
    dest: /home/{{ default_user }}/docker_mounts/proxy/homepage/services.yaml
    mode: '0664'
    container_name: homepage
  - name: prometheus_targets.yaml
    src: "{{ inventory_dir }}/../files/prometheus/targets/nodes.yaml.j2"
    dest: /home/{{ default_user }}/docker_mounts/monitoring/prometheus/targets/nodes.yaml
    mode: '0664'
    container_name: prometheus

# docker mounts subfolders
docker_mounts_subfolders:
  - name: monitoring_prometheus
    dest: /home/{{ default_user }}/docker_mounts/monitoring/prometheus/data
    mode: '0775'
    container_name: prometheus

# docker compose
docker_compose:
  - compose_name: proxy
    state: present
    networks:
      traefik:
        name: traefik
      docker-proxy:
        name: docker-proxy
    containers:
      - container_name: traefik
        image: traefik:v3.1
        networks:
          - traefik
          - docker-proxy
        environment:
          - TZ=America/Edmonton
          - "CF_API_EMAIL={{ default_user_email }}"
          - "CF_DNS_API_TOKEN={{ secret_cf_token }}"
        ports:
          - 80:80
          - 443:443
          - 8080:8080
        depends_on:
          - docker-socket-proxy
        volumes:
          - "/home/{{ default_user }}/docker_mounts/proxy/traefik:/etc/traefik"
        restart: unless-stopped
        labels:
          - "homepage.group=Proxy"
          - "homepage.name=Traefik"
          - "homepage.description=Reverse Proxy"
          - "homepage.icon=traefik.png"
          - "homepage.href=http://docker-testing.home.stechsolutions.ca:8080/dashboard/#/"
          - "homepage.siteMonitor=http://docker-testing.home.stechsolutions.ca:8080"
          - "homepage.widget.type=traefik"
          - "homepage.widget.url=http://docker-testing.home.stechsolutions.ca:8080"
          - "homepage.widget.routers="
          - "homepage.widget.services="
          - "homepage.widget.middleware="
      - container_name: docker-socket-proxy
        image: tecnativa/docker-socket-proxy:0.2.0
        networks:
          - docker-proxy
        environment:
          - CONTAINERS=1 # Allow access to viewing containers
          - POST=0 # Disallow any POST operations (effectively read-only)
        volumes:
          - "/var/run/docker.sock:/var/run/docker.sock"
        restart: unless-stopped
      - container_name: homepage
        image: ghcr.io/gethomepage/homepage:v0.9.11
        networks:
          - traefik
          - docker-proxy
        depends_on:
          - docker-socket-proxy
        environment:
          - TZ=America/Edmonton
          - PUID=1000
          - PGID=1000
        volumes:
          - "/home/{{ default_user }}/docker_mounts/proxy/homepage:/app/config"
        restart: unless-stopped
        labels:
          - "traefik.enable=true"
          - "traefik.http.routers.homepage.rule=Host(`homepage-testing.home.stechsolutions.ca`)"
          - "traefik.http.services.homepage.loadbalancer.server.port=3000"
          - "traefik.http.routers.homepage.entrypoints=websecure"
          - "traefik.http.routers.homepage.tls.certresolver=letsencrypt"
  - compose_name: monitoring
    state: present
    networks:
      traefik:
        name: traefik
        external: true
    containers:
      - container_name: prometheus
        image: prom/prometheus:v3.0.1
        command:
          - "--config.file=/etc/prometheus/prometheus.yml"
          - "--web.external-url=http://prometheus-testing.home.stechsolutions.ca"
        user: "1000:1000"
        networks:
          - traefik
        healthcheck:
          test: ["CMD", "promtool", "check", "healthy"]
          interval: 30s
          timeout: 10s
          retries: 3
        volumes:
          - "/home/{{ default_user }}/docker_mounts/monitoring/prometheus:/etc/prometheus"
          - "/home/{{ default_user }}/docker_mounts/monitoring/prometheus/data:/prometheus"
        restart: unless-stopped
        labels:
          - "traefik.enable=true"
          - "traefik.http.routers.prometheus.rule=Host(`prometheus-testing.home.stechsolutions.ca`)"
          - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
          - "traefik.http.routers.prometheus.entrypoints=websecure"
          - "traefik.http.routers.prometheus.tls.certresolver=letsencrypt"
