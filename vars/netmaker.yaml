---
# Netmaker variables

# Base variables
netmaker_base_domain: "netmaker.stechsolutions.ca"
netmaker_ee: false
netmaker_version: "v0.20.0"
netmaker_directory: "/home/{{ default_user }}/netmaker"
netclient_directory: "/home/{{ default_user }}/netclient"

# TURN variables
netmaker_turn_username: "netmaker"

# Mosquitto variables
netmaker_mq_config_url:
  "https://raw.githubusercontent.com/gravitl/netmaker/\
  {{ netmaker_version }}\
  /docker/mosquitto.conf"
netmaker_mq_username: "netmaker"

# Wait script
netmaker_wait_script_url:
  "https://raw.githubusercontent.com/gravitl/netmaker/\
  {{ netmaker_version }}\
  /docker/wait.sh"

# Netmaker Volume on DigitalOcean
# state: present | absent
netmaker_volume:
  {volume_name: 'netmaker-data', state: 'present', block_size: 5}

# Netmaker Droplet
# state: present | absent
netmaker_droplet:
  {name: 'netmaker01',
   state: 'present',
   tags: ['Netmaker', "VPN", "HTTPS"],
   volume: {volume_name: '{{ netmaker_volume.volume_name }}',
            state: 'present',
            mount_point: '/home/{{ default_user }}/docker',
            group: 'root',
            owner: 'root',
            become_to_mount: true
   }
  }

# Netmaker Cloudflare DNS Record for root, dashboard, api, and broker
# subdomains.
netmaker_cf_record:
  - {
    name: 'netmaker01',
    zone: 'stechsolutions.ca',
    record: 'netmaker',
    proxied: false,
    state: '{{ netmaker_droplet.state }}',
  }
  - {
    name: 'netmaker01',
    zone: 'stechsolutions.ca',
    record: 'dashboard.netmaker',
    proxied: false,
    state: '{{ netmaker_droplet.state }}'
  }
  - {
    name: 'netmaker01',
    zone: 'stechsolutions.ca',
    record: 'api.netmaker',
    proxied: false,
    state: '{{ netmaker_droplet.state }}'
  }
  - {
    name: 'netmaker01',
    zone: 'stechsolutions.ca',
    record: 'broker.netmaker',
    proxied: false,
    state: '{{ netmaker_droplet.state }}'
  }
  - {
    name: 'netmaker01',
    zone: 'stechsolutions.ca',
    record: 'stun.netmaker',
    proxied: false,
    state: '{{ netmaker_droplet.state }}'
  }
  - {
    name: 'netmaker01',
    zone: 'stechsolutions.ca',
    record: 'turn.netmaker',
    proxied: false,
    state: '{{ netmaker_droplet.state }}'
  }
  - {
    name: 'netmaker01',
    zone: 'stechsolutions.ca',
    record: 'turnapi.netmaker',
    proxied: false,
    state: '{{ netmaker_droplet.state }}'
  }
  # Netmaker Cloudflare DNS Record for grafana, prometheus,
  # and netmaker-exporter subdomains for the EE setup.
  - {
    name: 'netmaker01',
    zone: 'stechsolutions.ca',
    record: 'grafana.netmaker',
    proxied: false,
    state: '{{ netmaker_droplet.state if netmaker_ee else "absent" }}',
  }
  - {
    name: 'netmaker01',
    zone: 'stechsolutions.ca',
    record: 'prometheus.netmaker',
    proxied: false,
    state: '{{ netmaker_droplet.state if netmaker_ee else "absent" }}'
  }
  - {
    name: 'netmaker01',
    zone: 'stechsolutions.ca',
    record: 'netmaker-exporter.netmaker',
    proxied: false,
    state: '{{ netmaker_droplet.state if netmaker_ee else "absent" }}'
  }

# nmctl variables
netmaker_nmctl_context_name: "production"
netmaker_nmctl_endpoint: "https://api.{{ netmaker_base_domain }}"

# netmaker networks and enrollment keys
# It is a one to one mapping of networks and enrollment keys
# so they are defined in the same list.
# The tags needs to be unique.
netmaker_networks:
  - {
    name: 'monitoring',
    addressrange: "10.50.50.0/24",
    addressrange6: "",
    isipv4: "yes",
    isipv6: "no",
    tags: "monitoring-tag",
    enrollment_unlimited: true,
  }
  - {
    name: 'personal',
    addressrange: "10.50.60.0/24",
    addressrange6: "",
    isipv4: "yes",
    isipv6: "no",
    tags: "personal-tag",
    enrollment_unlimited: true,
  }
  - {
    name: 'farm-network',
    addressrange: "10.50.70.0/24",
    addressrange6: "",
    isipv4: "yes",
    isipv6: "no",
    tags: "farm-network-tag",
    enrollment_unlimited: true,
  }

# netmaker host and node definitions
netmaker_host_definition: {
  name: '{{ netmaker_droplet.name }}',
  isdefault: true,
  node_settings: [
    {
      # monitoring network
      network: '{{ netmaker_networks[0].name }}',
      isrelayed: false,
      isrelay: false,
      isegressgateway: false,
      isingressgateway: true,
      egressgatewayranges: [],
      egressgatewaynatenabled: false,
      relayaddrs: [],
      ingressdns: "",
      internetgateway: ""
    },
    {
      # personal network
      network: '{{ netmaker_networks[1].name }}',
      isrelayed: false,
      isrelay: false,
      isegressgateway: false,
      isingressgateway: true,
      egressgatewayranges: [],
      egressgatewaynatenabled: false,
      relayaddrs: [],
      ingressdns: "",
      internetgateway: ""
    },
    {
      # farm-network network
      network: '{{ netmaker_networks[2].name }}',
      isrelayed: false,
      isrelay: false,
      isegressgateway: false,
      isingressgateway: true,
      egressgatewayranges: [],
      egressgatewaynatenabled: false,
      relayaddrs: [],
      ingressdns: "",
      internetgateway: ""
    }
  ]
}
