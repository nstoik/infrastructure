---
# Check if the Netmaker admin user exists and create it if it doesn't

# Block for nmctl admin check
- name: Block for nmctl admin check
  tags:
    - netmaker
    - netmaker.nmctl
  block:

    # Call the api to see if a super admin user exists
    - name: Check for Netmaker superadmin users
      ansible.builtin.uri:
        # yamllint disable-line rule:line-length
        url: "https://api.{{ netmaker_base_domain }}/api/users/adm/hassuperadmin"
        method: GET
        status_code: 200
        validate_certs: true
        return_content: true
      register: netmaker_url_check_for_superadmin

    # Convert the content to a boolean
    - name: Convert the content to a boolean
      ansible.builtin.set_fact:
        netmaker_has_superadmin: "{{ netmaker_url_check_for_superadmin.content |
                                     from_json }}"

    # # Create the Netmaker admin user if it doesn't exist
    # - name: Create the admin user
    #   ansible.builtin.command:
    #     cmd: "nmctl user create \
    #           --name={{ secret_nm_admin_account }} \
    #           --password={{ secret_nm_admin_password }} \
    #           --admin=true"
    #   when: not netmaker_has_superadmin
    #   changed_when: false

    # Create the Netmaker superadmin using the API if it doesn't exist
    - name: Create the superadmin user
      ansible.builtin.uri:
        # yamllint disable-line rule:line-length
        url: "https://api.{{ netmaker_base_domain }}/api/users/adm/createsuperadmin"
        method: POST
        status_code: 200
        validate_certs: true
        body_format: json
        body:
          username: "{{ secret_nm_admin_account }}"
          password: "{{ secret_nm_admin_password }}"
          confirm-password: "{{ secret_nm_admin_password }}"
      when: not netmaker_has_superadmin
