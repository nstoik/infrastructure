---
# Install the NMCTL CLI tool for interacting with the Netmaker API
# https://netmaker.readthedocs.io/en/master/nmctl.html#external-clients
#
# input variables:
#  netmaker_check_for_admin: boolean

# Block for netmaker nmctl role
- name: Block for netmaker nmctl role
  tags:
    - netmaker
    - netmaker.nmctl
  block:

    # Get the nmctl binary and make it executable
    - name: Get the nmctl binary
      ansible.builtin.get_url:
        url: "https://github.com/gravitl/netmaker/releases/download/\
              {{ netmaker_version }}\
              /nmctl-linux-amd64"
        dest: "/usr/local/bin/nmctl"
        owner: "{{ default_user }}"
        group: "{{ default_user }}"
        mode: 0755
        # Force the download even if the file already exists so it can be
        # updated if needed.
        force: true
      become: true

    # Create the autocomplete file for zsh for the nmctl binary
    - name: Create the autocomplete file for zsh for the nmctl binary
      ansible.builtin.shell:
        cmd: 'nmctl completion zsh > /usr/share/zsh/vendor-completions/_nmctl'
        creates: '/usr/share/zsh/vendor-completions/_nmctl'
      become: true

    # Create a nmctl context to interact with the Netmaker API
    #
    # The context file is stored in the '~/.netmaker' directory
    - name: Create nmctl context
      ansible.builtin.command:
        cmd: "nmctl context set {{ netmaker_nmctl_context_name }} \
              --endpoint={{ netmaker_nmctl_endpoint }} \
              --master_key={{ secret_nm_master_key }}"
      changed_when: false

    # Set the nmctl context to interact with the Netmaker API
    - name: Set nmctl context
      ansible.builtin.command:
        cmd: "nmctl context use {{ netmaker_nmctl_context_name }}"
      changed_when: false

    # Test if the admin user exists
    - name: Test if the admin user exists
      ansible.builtin.command:
        cmd: "nmctl server has_admin"
      register: netmaker_nmctl_has_admin_response
      when: "netmaker_check_for_admin"
      changed_when: false

    # Create the Netmaker admin user if it doesn't exist
    - name: Create the admin user
      ansible.builtin.command:
        cmd: "nmctl user create \
              --name={{ secret_nm_admin_account }} \
              --password={{ secret_nm_admin_password }} \
              --admin=true"
      when: "netmaker_check_for_admin and
            'false' in netmaker_nmctl_has_admin_response.stdout"
      changed_when: false
