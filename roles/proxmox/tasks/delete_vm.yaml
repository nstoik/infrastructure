---
# Delete a VM
# Will delete a VM if it exists and state is absent.

# Required inputs:
#  proxmox_vm: The VM to delete from the template

# Check if the VM config file exists (does the VM exist)
- name: Check if the VM exists
  ansible.builtin.stat:
    path: /etc/pve/qemu-server/{{ proxmox_vm.id }}.conf
  register: proxmox_vm_config
  become: true
  tags:
    - proxmox
    - proxmox.vm
    - proxmox.vm.delete

# Delete the VM if it exists and the state is absent
- name: Delete the VM
  when:
    proxmox_vm_config.stat.exists and
    proxmox_vm.state == "absent" and
    proxmox_vm.proxmox_node == inventory_hostname
  tags:
    - proxmox
    - proxmox.vm
    - proxmox.vm.delete
  block:

    # Stop the VM
    - name: Stop the VM
      ansible.builtin.command:
        cmd: qm stop {{ proxmox_vm.id }}
      become: true
      changed_when: false

    # Delete the VM
    # yamllint disable rule:line-length
    - name: Delete the VM
      ansible.builtin.command:
        cmd: qm destroy {{ proxmox_vm.id }} --purge --destroy-unreferenced-disks
      become: true
      changed_when: false
    # yamllint enable rule:line-length

    # Update the known_hosts file
    - name: Update the known_hosts file for {{ proxmox_vm.name }}
      ansible.builtin.include_role:
        name: base
        tasks_from: update_known_hosts
      vars:
        base_hostname: "{{ proxmox_vm.name_fqdn }}"
        base_state: "{{ proxmox_vm.state }}"
        base_comment: "Proxmox VM: {{ proxmox_vm.name }}"
      tags:
        - base.known_hosts
