---
# Tasks to setup ACME certificates on a Proxmox node

# Check if the ACME account already exists
- name: Check if the ACME account already exists
  ansible.builtin.command:
    cmd: >
      pvenode acme account list
  register: proxmox_acme_account_list_results
  become: true
  changed_when: false

- name: Block for setting up the ACME account and config
  when: proxmox_acme.account.name not in proxmox_acme_account_list_results.stdout
  block:

    # Get the TOS for LetsEncrypt
    - name: Get the TOS for LetsEncrypt
      ansible.builtin.command:
        cmd: >
          pvesh get /cluster/acme/meta --output-format json
      register: proxmox_acme_tos_results
      become: true
      changed_when: true

    # Extract the TOS URL
    - name: Extract the TOS URL
      ansible.builtin.set_fact:
        proxmox_acme_tos_url: "{{ proxmox_acme_tos_results.stdout | from_json | json_query('termsOfService') }}"
      changed_when: true

    # Register the ACME account
    - name: Register the ACME account
      ansible.builtin.command:
        cmd: >
          pvesh create /cluster/acme/account
          --contact "{{ proxmox_acme.account.contact }}"
          --directory "{{ proxmox_acme.account.directory }}"
          --tos_url "{{ proxmox_acme_tos_url }}"
      become: true
      changed_when: true

    # Create a temp file for the ACME plugin authentication
    - name: Create a temp file for the ACME plugin authentication
      ansible.builtin.tempfile:
        state: file
        suffix: '.tmp'
      register: proxmox_acme_temp_file

    # Write the ACME plugin authentication to the temp file
    - name: Write the ACME plugin authentication to the temp file
      ansible.builtin.copy:
        content: |
          CF_Email={{ proxmox_acme.plugin.cf_api_email }}
          CF_Token={{ proxmox_acme.plugin.cf_api_key }}
        dest: "{{ proxmox_acme_temp_file.path }}"
        mode: '0600'
      changed_when: true

    # Enable the ACME plugin
    - name: Enable the ACME plugin
      ansible.builtin.command:
        cmd: >
          pvenode acme plugin add dns cf_dns
          --api {{ proxmox_acme.plugin.id_name }}
          --data "{{ proxmox_acme_temp_file.path }}"
      become: true
      changed_when: true

    # Remove the temp file
    - name: Remove the temp file
      ansible.builtin.file:
        path: "{{ proxmox_acme_temp_file.path }}"
        state: absent

    # Set the ACME domains
    - name: Set the ACME domains
      ansible.builtin.command:
        cmd: >
          pvenode config set
          --acmedomain0 "{{ proxmox_acme.domains[0] }}",plugin=cf_dns
      become: true
      changed_when: true

    # Order the ACME certificate
    - name: Order the ACME certificate
      ansible.builtin.command:
        cmd: >
          pvenode acme cert order
      become: true
      changed_when: true
