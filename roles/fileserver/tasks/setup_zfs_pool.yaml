---
# Tasks to setup ZFS pool on a host.
#
# Input variables:
#   fileserver_zfs_pool:
#     pool_name: <name of the ZFS pool>
#     mount_point: <mount point for the pool>
#     vdevs:
#       - raid_type: <RAID type for the vdev>
#         disks:
#           - name: <disk name>
#     datasets: not used in this task

# block for ZFS pool tasks
- name: Block for ZFS pool tasks
  tags:
    - fileserver
    - fileserver.zfs
  block:

    # Install ZFS utilities
    - name: Install ZFS utilities
      ansible.builtin.apt:
        pkg:
          - zfsutils-linux
          - sanoid
          - expect
        state: present
      become: true

    # Try to import the ZFS pool
    - name: Try to import the ZFS pool
      ansible.builtin.command: >
        zpool import -f "{{ fileserver_zfs_pool.pool_name }}"
      register: zpool_import
      changed_when: false
      failed_when: false
      become: true

    # Check if the ZFS pool exists
    - name: Check if the ZFS pool exists
      ansible.builtin.command: >
        zpool list -H "{{ fileserver_zfs_pool.pool_name }}"
      register: zpool_check
      changed_when: false
      failed_when: false

    # Create the ZFS pool if it does not exist
    - name: Create the ZFS pool if it does not exist
      ansible.builtin.command: >
        zpool create
        -m {{ fileserver_zfs_pool.mount_point }}
        -o ashift=12
        -O compression=lz4
        -O xattr=sa
        -O normalization=formD
        {{ fileserver_zfs_pool.pool_name }}
        {% for vdev in fileserver_zfs_pool.vdevs %}
        {% if vdev.raid_type | default('') | length > 0 %}
        {{ vdev.raid_type }}
        {% endif %}
        {% for disk in vdev.disks %}
        {{ disk.name }}
        {% endfor %}
        {% endfor %}
      when: zpool_check.rc != 0
      changed_when: zpool_check.rc != 0
      become: true
