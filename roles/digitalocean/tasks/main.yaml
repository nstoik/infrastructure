---
# tasks file for digitalocean
#
# inputs:
#   digitalocean_droplet: details for the droplet to create.

# Configure a DigitalOcean Droplet
- name: Set Droplet State
  community.digitalocean.digital_ocean_droplet:
    oauth_token: "{{ secret_do_token }}"
    state: "{{ digitalocean_droplet.state | default('present') }}"
    name: "{{ digitalocean_droplet.name }}"
    size: "{{ digitalocean_droplet.size | default(droplet_size) }}"
    region: "{{ droplet_region }}"
    image: "{{ droplet_image }}"
    ssh_keys: "{{ droplet_ssh_key_ids }}"
    tags: "{{ digitalocean_default_tags +
              digitalocean_droplet.tags | default([]) }}"
    monitoring: true
    project_name: "nelsonstoik"
    unique_name: true
  register: digitalocean_droplet_result

# attach a block storage volume to a droplet if the volume is defined
- name: Attach DigitalOcean block storage
  community.digitalocean.digital_ocean_block_storage:
    oauth_token: "{{ secret_do_token }}"
    state: "{{ digitalocean_droplet['volume']['state'] }}"
    command: "attach"
    region: "{{ droplet_region }}"
    volume_name: "{{ digitalocean_droplet['volume']['volume_name'] }}"
    droplet_id: "{{ digitalocean_droplet_result.data.droplet.id }}"
  when: digitalocean_droplet['volume'] is defined and
        digitalocean_droplet.state == 'present'
  tags:
    - digitalocean.storage

- name: Refresh inventory
  ansible.builtin.meta: refresh_inventory
